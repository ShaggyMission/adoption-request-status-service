openapi: 3.0.0
info:
  title: Adoption Request Status Service API
  version: 1.0.0
  description: >
    This API provides adoption request status management functionality for the Shaggy Mission pet adoption system.
    The service allows administrators and adoption coordinators to update the status of adoption requests,
    processing applications from pending to approved or rejected states. This service is designed to help
    rescue organizations and adoption centers efficiently manage the adoption approval workflow, making
    critical decisions about pet placements and maintaining comprehensive request tracking throughout
    the adoption process. The API supports administrative decision-making with comprehensive validation
    and error handling for adoption request management.

servers:
  - url: http://localhost:3017
    description: Development server

paths:
  /adoption-requests/{id}:
    patch:
      summary: Update adoption request status
      description: >
        
      tags:
        - Adoption Request Management
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the adoption request (MongoDB ObjectId)
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
            example: "64f8b2a1c3d4e5f6a7b8c9d4"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRequestStatusRequest'
            examples:
              approve_request:
                summary: Approve adoption request
                value:
                  status: "approved"
              reject_request:
                summary: Reject adoption request
                value:
                  status: "rejected"
      responses:
        '200':
          description: Successfully updated adoption request status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdoptionRequest'
              examples:
                approved_request:
                  summary: Successfully approved request
                  value:
                    _id: "64f8b2a1c3d4e5f6a7b8c9d4"
                    userId: "64f8b2a1c3d4e5f6a7b8c9d1"
                    petId: "64f8b2a1c3d4e5f6a7b8c9d0"
                    message: "I would love to adopt this beautiful dog. I have experience with pets and a large backyard."
                    status: "approved"
                    dateRequested: "2024-01-15T10:30:00.000Z"
                rejected_request:
                  summary: Successfully rejected request
                  value:
                    _id: "64f8b2a1c3d4e5f6a7b8c9d4"
                    userId: "64f8b2a1c3d4e5f6a7b8c9d1"
                    petId: "64f8b2a1c3d4e5f6a7b8c9d0"
                    message: "I would like to adopt this pet for my apartment."
                    status: "rejected"
                    dateRequested: "2024-01-15T10:30:00.000Z"
        '400':
          description: Bad Request - Invalid status value or request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_status:
                  summary: Invalid status value
                  value:
                    message: "Invalid status. Allowed: approved, rejected"
                invalid_request_id:
                  summary: Invalid request ID format
                  value:
                    message: "Invalid request ID format"
                missing_status:
                  summary: Missing status field
                  value:
                    message: "Status field is required"
        '404':
          description: Not Found - Adoption request not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                request_not_found:
                  summary: Adoption request not found
                  value:
                    message: "Adoption request not found"
                invalid_id:
                  summary: Request ID does not exist
                  value:
                    message: "Adoption request not found"
        '500':
          description: Internal Server Error - Database or server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                server_error:
                  summary: General server error
                  value:
                    message: "Server error"
                database_error:
                  summary: Database connection error
                  value:
                    message: "Server error"
                update_failed:
                  summary: Database update failed
                  value:
                    message: "Server error"

components:
  schemas:
    UpdateRequestStatusRequest:
      type: object
      properties:
        status:
          type: string
          description: New status for the adoption request
          enum: ["approved", "rejected"]
          example: "approved"
      required:
        - status
      description: Request payload for updating adoption request status

    AdoptionRequest:
      type: object
      properties:
        _id:
          type: string
          description: Unique MongoDB ObjectId for the adoption request
          example: "64f8b2a1c3d4e5f6a7b8c9d4"
          pattern: '^[0-9a-fA-F]{24}$'
        userId:
          type: string
          description: Unique identifier of the user who submitted the request
          example: "64f8b2a1c3d4e5f6a7b8c9d1"
        petId:
          type: string
          description: Unique identifier of the pet being requested for adoption
          example: "64f8b2a1c3d4e5f6a7b8c9d0"
        message:
          type: string
          description: User's adoption message or reason for wanting to adopt
          example: "I would love to adopt this beautiful dog. I have experience with pets and a large backyard."
          nullable: true
        status:
          type: string
          description: Current status of the adoption request
          enum: ["pending", "approved", "rejected"]
          example: "approved"
        dateRequested:
          type: string
          format: date-time
          description: Timestamp when the adoption request was submitted
          example: "2024-01-15T10:30:00.000Z"
      required:
        - _id
        - userId
        - petId
        - status
        - dateRequested
      description: Complete adoption request record

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Error message describing the issue
          example: "Invalid status. Allowed: approved, rejected"
      required:
        - message
      description: Standard error response format for API errors

  examples:
    RequestProcessingWorkflow:
      summary: Example request processing workflow
      description: >
        This example demonstrates the typical adoption request processing workflow:
        1. User submits adoption request → status: "pending"
        2. Administrator reviews request and user profile
        3. Administrator makes decision → status: "approved" or "rejected"
        4. User receives notification of decision
        5. If approved → adoption process continues
        6. If rejected → user can submit new request
      value:
        - operation: "Submit request"
          initialStatus: "pending"
          userMessage: "I would love to adopt this beautiful dog. I have experience with pets and a large backyard."
        - operation: "Review request"
          adminAction: "Evaluate user profile and compatibility"
          criteria: ["User verification", "Pet compatibility", "Living situation", "Experience"]
        - operation: "Approve request"
          statusUpdate: "approved"
          nextSteps: ["Contact user", "Schedule home visit", "Prepare adoption paperwork"]
        - operation: "Reject request"
          statusUpdate: "rejected"
          nextSteps: ["Send rejection notification", "Provide feedback", "Suggest alternatives"]

    AdministrativeDecisions:
      summary: Administrative decision examples
      description: >
        Common scenarios and decision criteria for adoption request processing:
        - Approval criteria and successful applications
        - Rejection reasons and feedback
        - Special considerations for different pet types
        - User communication and next steps
      value:
        - scenario: "Experienced dog owner"
          userProfile: "Previous pet owner with references"
          petType: "Large breed dog"
          decision: "approved"
          reasoning: "Excellent match - experience with large breeds"
        - scenario: "First-time pet owner"
          userProfile: "No previous pet experience"
          petType: "High-energy puppy"
          decision: "rejected"
          reasoning: "Recommend starting with older, calmer pet"
        - scenario: "Apartment living"
          userProfile: "Small apartment, no yard"
          petType: "Large active dog"
          decision: "rejected"
          reasoning: "Living space not suitable for large active breed"
        - scenario: "Perfect match"
          userProfile: "Experienced cat owner, quiet home"
          petType: "Senior cat"
          decision: "approved"
          reasoning: "Ideal match for senior cat's needs"

    ValidationScenarios:
      summary: Validation and error scenarios
      description: >
        Common validation scenarios and error responses:
        - Invalid status values and format errors
        - Missing or malformed request IDs
        - Request not found errors
        - Server and database errors
      value:
        - scenario: "Invalid status value"
          request: { "status": "pending" }
          error: "Invalid status. Allowed: approved, rejected"
          explanation: "Only approved/rejected updates allowed"
        - scenario: "Missing status field"
          request: {}
          error: "Status field is required"
          explanation: "Status is required field for updates"
        - scenario: "Invalid request ID"
          requestId: "invalid-id"
          error: "Invalid request ID format"
          explanation: "Request ID must be valid MongoDB ObjectId"
        - scenario: "Request not found"
          requestId: "64f8b2a1c3d4e5f6a7b8c9d4"
          error: "Adoption request not found"
          explanation: "Request ID does not exist in database"